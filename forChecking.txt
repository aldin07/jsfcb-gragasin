function slideUp(){
    // Loops repeats programmed task
	for(let c=0; c<columns; c++){
		let col = [board[0][c], board[1][c], board[2][c], board[3][c]];
		let originalCol = col.slice();
		col = slide(col);

		let changedIndeces = [];
		for(let r=0; r<rows; r++){
			if(originalCol[r] !== col[r]){
				changedIndeces.push(r);
			}
		}

		for(let r=0; r<rows; r++){
			board[r][c] = col[r];
			let tile = document.getElementById( r.toString() + "-" + c.toString());
			let num = board[r][c];
			updateTile(tile, num);

			if(changedIndeces.includes(r) && num !== 0){

				tile.style.animation = "slide-from-bottom 0.3s";

				setTimeout(() => {
					tile.style.animation = "";
				}, 300)
			}
		}
	}
}

mali

function slideUp(){
	// Loops repeats programmed task
	for(let c=0; c<columns; c++){
		let col = [board[0][c], board[1][c], board[2][c], board[3][c]];
		let originalCol = col.slice();
		col = slide(col);
		let changedIndeces = [];
		for(let r=0; r<rows; r++){
			if(originalCol[r] !== col[r]){
				changedIndeces.push(r);
			}
		}


		for(let r=0; r<rows; r++){
			board[r][c] = col[r];
			let tile = document.getElementById(r.toString() + "-" + c.toString());
			let num = board[r][c];
			updateTile(tile,num);
			
			if(changedIndeces.includes(r) && num !== 0){
				tile.style.animation = "slice-from-bottom 0.3s";
				setTimeout(() => {
					tile.style.animation = "";
				},300)
			}		
		}
	}
}